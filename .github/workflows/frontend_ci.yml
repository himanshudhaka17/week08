# week08/.github/workflows/frontend_ci.yml

name: Frontend CI - Build & Push Image

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend_ci.yml'

env:
  # FQDN of your ACR, e.g. sit722acr1870.azurecr.io
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}

jobs:
  build_and_push_frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ⬇️ Patch backend IPs into the source BEFORE building the image
      - name: Patch frontend/src/config.js with backend IPs
        run: |
          set -euo pipefail
          FILE="frontend/src/config.js"
          mkdir -p frontend/src
          # Create if missing, otherwise replace existing values
          if [ ! -f "$FILE" ]; then
            cat > "$FILE" <<'EOF'
export const PRODUCT_API_BASE = "http://4.237.211.110";
export const ORDER_API_BASE   = "http://4.254.28.11";
EOF
          else
            sed -E -i 's|export const PRODUCT_API_BASE[[:space:]]*=.*;|export const PRODUCT_API_BASE = "http://4.237.211.110";|g' "$FILE"
            sed -E -i 's|export const ORDER_API_BASE[[:space:]]*=.*;|export const ORDER_API_BASE   = "http://4.254.28.11";|g' "$FILE"
            grep -q 'PRODUCT_API_BASE' "$FILE" || echo 'export const PRODUCT_API_BASE = "http://4.237.211.110";' >> "$FILE"
            grep -q 'ORDER_API_BASE'   "$FILE" || echo 'export const ORDER_API_BASE   = "http://4.254.28.11";' >> "$FILE"
          fi
          echo "===== resulting config.js ====="
          cat "$FILE"

      # Optional local (non-Docker) build if you keep a Node app here.
      - name: Setup Node (optional build step)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install & build frontend if package.json exists
        run: |
          if [ -f frontend/package.json ]; then
            npm ci --prefix frontend
            npm --prefix frontend run build --if-present || true
          else
            echo "No package.json found in frontend/. Skipping npm build."
          fi

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to ACR
        run: |
          # az acr login expects the ACR NAME (left part of FQDN)
          ACR_NAME=$(echo "${{ env.ACR_LOGIN_SERVER }}" | cut -d. -f1)
          echo "Logging in to ACR: $ACR_NAME (from ${ACR_LOGIN_SERVER})"
          az acr login --name "$ACR_NAME"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & push frontend image
        env:
          IMG_BASE: ${{ env.ACR_LOGIN_SERVER }}/frontend
        run: |
          docker build -t "$IMG_BASE:${{ env.IMAGE_TAG }}" -t "$IMG_BASE:latest" ./frontend
          docker push "$IMG_BASE:${{ env.IMAGE_TAG }}"
          docker push "$IMG_BASE:latest"

      - name: Logout from Azure
        if: always()
        run: az logout
