# week08/.github/workflows/frontend_ci.yml

name: Frontend CI - Build & Push Image

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend_ci.yml'

env:
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}

jobs:
  build_and_push_frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ðŸ”§ Always write the backend IPs into config.js (no heredoc, no sed)
      - name: Write backend IPs into config.js
        run: |
          mkdir -p frontend/src
          printf '%s\n' \
          'export const PRODUCT_API_BASE = "http://4.237.211.110";' \
          'export const ORDER_API_BASE   = "http://4.254.28.11";' \
          > frontend/src/config.js
          echo "----- frontend/src/config.js -----"
          cat frontend/src/config.js

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to ACR
        run: |
          ACR_NAME=$(echo "${{ env.ACR_LOGIN_SERVER }}" | cut -d. -f1)
          az acr login --name "$ACR_NAME"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & push frontend image
        env:
          IMG_BASE: ${{ env.ACR_LOGIN_SERVER }}/frontend
        run: |
          test -f frontend/Dockerfile || { echo "Missing frontend/Dockerfile"; exit 1; }
          docker build -t "$IMG_BASE:${{ env.IMAGE_TAG }}" -t "$IMG_BASE:latest" ./frontend
          docker push "$IMG_BASE:${{ env.IMAGE_TAG }}"
          docker push "$IMG_BASE:latest"

      - name: Logout from Azure
        if: always()
        run: az logout
